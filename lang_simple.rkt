;; #source  
;;; generated by Ott 0.28 from: ./ott/lang_simple.ott

#lang racket
(require redex)

;; #source file ./ott/lang_simple.ott  lines 4 - 4 
(error "TODO") 
;; #source file ./ott/lang_simple.ott  lines 4 - 6 
;; #source file ./ott/lang_simple.ott  lines 8 - 76 
;; #source file ./ott/lang_simple.ott  lines 8 - 76 
;; #source file ./ott/lang_simple.ott  lines 81 - 83 
;; #source file ./ott/lang_simple.ott  lines 86 - 86 
;; #source file ./ott/lang_simple.ott  lines 92 - 98 and file ./ott/lang_simple.ott  lines 103 - 127 and file ./ott/lang_simple.ott  lines 131 - 140 and file ./ott/lang_simple.ott  lines 142 - 147 and file ./ott/lang_simple.ott  lines 149 - 154 and file ./ott/lang_simple.ott  lines 157 - 162 and file ./ott/lang_simple.ott  lines 164 - 166 and file ./ott/lang_simple.ott  lines 171 - 191 and file ./ott/lang_simple.ott  lines 196 - 205 and file ./ott/lang_simple.ott  lines 207 - 212 and file ./ott/lang_simple.ott  lines 214 - 217 and file ./ott/lang_simple.ott  lines 225 - 226 and file ./ott/lang_simple.ott  lines 234 - 245 and file ./ott/lang_simple.ott  lines 249 - 255 and file ./ott/lang_simple.ott  lines 258 - 263 and file ./ott/lang_simple.ott  lines 265 - 273 and file ./ott/lang_simple.ott  lines 277 - 279 and file ./ott/lang_simple.ott  lines 281 - 283 and file ./ott/lang_simple.ott  lines 285 - 287 and file ./ott/lang_simple.ott  lines 290 - 295 and file ./ott/lang_simple.ott  lines 297 - 302 
(define-language L

;; #source file ./ott/lang_simple.ott  lines 92 - 98 
  (level
)

;; #source file ./ott/lang_simple.ott  lines 196 - 205 
  (canonical
    (CanonicalLam var canonical)
    CanonicalDyn
    (CanonicalAtomic atomic)
    (CanonicalPi var canonical canonical))
  grammar_pp, 2817: and 
;; #source file ./ott/lang_simple.ott  lines 207 - 212 
  (atomic
    (AtomicSpine var spine)
    (AtomicSet level))
  grammar_pp, 2817: and 
;; #source file ./ott/lang_simple.ott  lines 214 - 217 
  (spine
    SpineEmpty
    (SpineCons spine canonical))

;; #source file ./ott/lang_simple.ott  lines 225 - 226 
  (epsilon
    (EvidencePair canonical canonical))

;; #source file ./ott/lang_simple.ott  lines 103 - 127 
  (term
    (TermLam var term)
    (TermApp term term)
    var
    (TermSet level)
    (TermPi var term term)
    (TermAnn term term)
    (TermEp epsilon term)
    TermDyn
    (TermDynAnn canonical)
    TermError)

;; #source file ./ott/lang_simple.ott  lines 297 - 302 
  (evalContext
    (EvalContextPi1 var term)
    (EvalContextPi2 var term)
    (EvalContextApp1 term)
    (EvalContextApp2 term)
    (EvalContextEp epsilon))

;; #source file ./ott/lang_simple.ott  lines 290 - 295 
  (simpleContext
    (SimpleContextPi1 var term)
    (SimpleContextPi2 var term)
    (SimpleContextApp1 term)
    (SimpleContextApp2 term)
    (SimpleContextAnn term))

;; #source file ./ott/lang_simple.ott  lines 277 - 279 
  (dummyeu
    (DummyEvidenceValueEv epsilon term)
    (DummyEvidenceValueRaw term))
  (var variable-not-otherwise-mentioned)
)

;;;; substitutions 
;; #source file ./ott/lang_simple.ott  lines 347 - 347 
(error "TODO print dependency");; #source file ./ott/lang_simple.ott  lines 355 - 358 and file ./ott/lang_simple.ott  lines 360 - 364 and file ./ott/lang_simple.ott  lines 366 - 370 
(define-language L

;; #source file ./ott/lang_simple.ott  lines 366 - 370 
  (Env
    EnvEmpty
    (EnvExt var canonical Env)
    (Envconcat Env Env))
  (var variable-not-otherwise-mentioned)
)

;;;; subrules 
;; #source file ./ott/lang_simple.ott  lines 466 - 466 and file ./ott/lang_simple.ott  lines 467 - 467 and file ./ott/lang_simple.ott  lines 470 - 470 and file ./ott/lang_simple.ott  lines 471 - 471 and file ./ott/lang_simple.ott  lines 472 - 472 and file ./ott/lang_simple.ott  lines 473 - 473 and file ./ott/lang_simple.ott  lines 474 - 474 and file ./ott/lang_simple.ott  lines 476 - 476 and file ./ott/lang_simple.ott  lines 477 - 477 and file ./ott/lang_simple.ott  lines 478 - 478 and file ./ott/lang_simple.ott  lines 479 - 479 and file ./ott/lang_simple.ott  lines 480 - 480 and file ./ott/lang_simple.ott  lines 481 - 481 and file ./ott/lang_simple.ott  lines 482 - 482 and file ./ott/lang_simple.ott  lines 483 - 483 and file ./ott/lang_simple.ott  lines 484 - 484 and file ./ott/lang_simple.ott  lines 485 - 485 and file ./ott/lang_simple.ott  lines 486 - 486 and file ./ott/lang_simple.ott  lines 487 - 487 
(error "TODO print dependency")
;;;; context application 
;; #source file ./ott/lang_simple.ott  lines 490 - 490 and file ./ott/lang_simple.ott  lines 491 - 491 
(error "TODO print dependency");; #source file ./ott/lang_simple.ott  lines 497 - 502 and file ./ott/lang_simple.ott  lines 505 - 507 and file ./ott/lang_simple.ott  lines 509 - 511 
(define-language L

;; #source file ./ott/lang_simple.ott  lines 497 - 502 
  (iinf
    (UniverseLevel level)
    UniverseInf)

;; #source file ./ott/lang_simple.ott  lines 509 - 511 
  (iinfs
    (UniverseMultiSetSingleton iinf)
    (UniverseMultiSetSum iinfs iinfs))

;; #source file ./ott/lang_simple.ott  lines 505 - 507 
  (is
    (LevelMultiSetSingleton level)
    (LevelMultiSetSum is is))
  (var variable-not-otherwise-mentioned)
)
;; #source file ./ott/lang_simple.ott  lines 519 - 530 

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 539 - 541 
 [is_Gamma_of_Env Gamma
  -------------------------------------
  (GVarLook x gU (EnvExt x gU Gamma))]



;; #source file ./ott/lang_simple.ott  lines 542 - 546 
 [is_Gamma_of_Env Gamma
  (GVarLook x gU Gamma)
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  -------------------------------------
  (GVarLook x gU (EnvExt y gV Gamma))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 550 - 552 
 [-----------------------
  (GVarFree x EnvEmpty)]



;; #source file ./ott/lang_simple.ott  lines 553 - 557 
 [is_Gamma_of_Env Gamma
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  (GVarFree x Gamma)
  ----------------------------------
  (GVarFree x (EnvExt y gU Gamma))]
)

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 578 - 581 
 [is_Gamma_of_Env Gamma
   (>  i  0) 
  ----------------------------------------------------------------
  (Universe Gamma (CanonicalAtomic (AtomicSet i))   (+  i  1)  )]



;; #source file ./ott/lang_simple.ott  lines 582 - 586 
 [is_Gamma_of_Env Gamma
  (GVarLook x gV Gamma)
  (Universe Gamma gV (UniverseLevel  (+  i  1) ))
  -------------------------------------------------------------------------------------
  (Universe Gamma (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) ) (UniverseLevel i))]



;; #source file ./ott/lang_simple.ott  lines 587 - 591 
 [is_Gamma_of_Env Gamma
  (Universe Gamma gU (UniverseLevel i))
  (Universe (EnvExt x gU Gamma) gV (UniverseLevel j))
  ----------------------------------------------------------------------------------------
  (Universe Gamma (CanonicalPi x gU gV)  (max  (UniverseLevel i)   (UniverseLevel j) ) )]



;; #source file ./ott/lang_simple.ott  lines 592 - 595 
 [is_Gamma_of_Env Gamma
  (Universe Gamma gu (UniverseLevel i))
  ----------------------------------------------------------
  (Universe Gamma  (CanonicalLam x gu)  (UniverseLevel i))]



;; #source file ./ott/lang_simple.ott  lines 596 - 600 
 [is_Gamma_of_Env Gamma
  (Universe Gamma (CanonicalAtomic (AtomicSpine x ge)) (UniverseLevel i))
  (Universe Gamma gv (UniverseLevel j))
  ----------------------------------------------------------------------------------------------------------------------
  (Universe Gamma (CanonicalAtomic (AtomicSpine x (SpineCons ge gv)))  (max  (UniverseLevel i)   (UniverseLevel j) ) )]



;; #source file ./ott/lang_simple.ott  lines 601 - 603 
 [is_Gamma_of_Env Gamma
  -------------------------------------------
  (Universe Gamma CanonicalDyn UniverseInf)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 609 - 612 
 [is_SGamma_of_Env SGamma
   (>  i  0) 
  ----------------------------------------------------------------
  (SUniverse SGamma (CanonicalAtomic (AtomicSet i))  (+  i  1) )]



;; #source file ./ott/lang_simple.ott  lines 613 - 617 
 [is_SGamma_of_Env SGamma
  (GVarLook x V SGamma)
  (SUniverse SGamma V  (+  i  1) )
  -----------------------------------------------------------------------
  (SUniverse SGamma (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) ) i)]



;; #source file ./ott/lang_simple.ott  lines 619 - 623 
 [is_SGamma_of_Env SGamma
  (SUniverse SGamma U i)
  (SUniverse (EnvExt x U SGamma) V j)
  --------------------------------------------------------
  (SUniverse SGamma (CanonicalPi x U V)  (max  i   j ) )]



;; #source file ./ott/lang_simple.ott  lines 624 - 626 
 [is_SGamma_of_Env SGamma
  is_u_of_canonical u
  ---------------------------------------------
  (SUniverse SGamma  (CanonicalLam x u)   0 )]



;; #source file ./ott/lang_simple.ott  lines 627 - 631 
 [is_e_of_spine e
  is_SGamma_of_Env SGamma
  (SUniverse SGamma (CanonicalAtomic (AtomicSpine x e)) i)
  (SUniverse SGamma v j)
  --------------------------------------------------------------------------------------
  (SUniverse SGamma (CanonicalAtomic (AtomicSpine x (SpineCons e v)))  (max  i   j ) )]

withDFNS655 
withDFNS655 )

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 658 - 660 
 [is_u_of_canonical u
  ------------------------------------------------------------------------------------
  (StaticHsub x U u (CanonicalAtomic (AtomicSet i)) (CanonicalAtomic (AtomicSet i)))]



;; #source file ./ott/lang_simple.ott  lines 663 - 668 
 [is_u_of_canonical u
  (StaticHsub x U u U U_)
  (StaticHsub x U u V V_)
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  --------------------------------------------------------------
  (StaticHsub x U u (CanonicalPi y U V) (CanonicalPi y U_ V_))]



;; #source file ./ott/lang_simple.ott  lines 670 - 674 
 [is_u_of_canonical u
  (StaticHsub x U u v v_)
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  ---------------------------------------------------------------
  (StaticHsub x U u  (CanonicalLam y v)   (CanonicalLam y v_) )]



;; #source file ./ott/lang_simple.ott  lines 677 - 680 
 [is_u_of_canonical u
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  ----------------------------------------------------------------------------------------------------------------------
  (StaticHsub x U u (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ))]



;; #source file ./ott/lang_simple.ott  lines 681 - 686 
 [is_e_of_spine e
  is_e_of_spine e_
  is_u_of_canonical u
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  (StaticHsub x U u (CanonicalAtomic (AtomicSpine y e)) (CanonicalAtomic (AtomicSpine y e_)))
  (StaticHsub x U u v v_)
  --------------------------------------------------------------------------------------------------------------------------
  (StaticHsub x U u (CanonicalAtomic (AtomicSpine y (SpineCons e v))) (CanonicalAtomic (AtomicSpine y (SpineCons e_ v_))))]



;; #source file ./ott/lang_simple.ott  lines 687 - 690 
 [is_u_of_canonical u1
  is_e_of_spine e
  is_u_of_canonical u2
  (StaticHsubR x U u1 (AtomicSpine x (SpineCons e u2)) v2 V_)
  ---------------------------------------------------------------------------
  (StaticHsub x U u1 (CanonicalAtomic (AtomicSpine x (SpineCons e u2))) v2)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 700 - 702 
 [is_u_of_canonical u
  --------------------------------------------------------
  (StaticHsubR x U u  (AtomicSpine  x  SpineEmpty)  u U)]



;; #source file ./ott/lang_simple.ott  lines 703 - 712 
 [is_u_of_canonical u2
  is_u_of_canonical u1
  is_e_of_spine e
  is_u_of_canonical u3
  (StaticHsub x U u1 u2 u3)
  (StaticHsubR x U u1 (AtomicSpine x e)  (CanonicalLam y v1)  (CanonicalPi y V1 V2))
  (StaticHsub y V1 u3 v1 v2)
  (StaticHsub y V1 u3 V2 V_)
  ------------------------------------
  (StaticHsubR x U u1  [grr]  v2 V_)]
)

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 721 - 723 
 [------------------------
  (SWellFormed EnvEmpty)]



;; #source file ./ott/lang_simple.ott  lines 724 - 729 
 [is_SGamma_of_Env SGamma
  (SWellFormed SGamma)
  (StaticCCheck SGamma U (CanonicalAtomic (AtomicSet i)))
  (GVarFree x SGamma)
  -----------------------------------
  (SWellFormed (EnvExt x U SGamma))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 734 - 737 
 [is_SGamma_of_Env SGamma
   (>  i  0) 
  --------------------------------------------------------------------------------
  (StaticCSynth SGamma (AtomicSet i) (CanonicalAtomic  (AtomicSet (+  i  1) ) ))]



;; #source file ./ott/lang_simple.ott  lines 739 - 743 
 [is_u_of_canonical U
  is_SGamma_of_Env SGamma
  (SWellFormed SGamma)
  (GVarLook x U SGamma)
  --------------------------------------------------------
  (StaticCSynth SGamma  (AtomicSpine  x  SpineEmpty)  U)]



;; #source file ./ott/lang_simple.ott  lines 747 - 754 
 [is_e_of_spine e
  is_SGamma_of_Env SGamma
  is_u_of_canonical u
  (StaticCSynth SGamma (AtomicSpine x e) (CanonicalPi y U1 U2))
  (StaticCCheck SGamma u U1)
  (StaticHsub y U1 u U2 V)
  ---------------------------------------------------------
  (StaticCSynth SGamma (AtomicSpine x (SpineCons e u)) V)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 760 - 763 
 [is_SGamma_of_Env SGamma
  is_rr_of_atomic rr
  (StaticCSynth SGamma rr (CanonicalAtomic RR))
  -----------------------------------------------------------------
  (StaticCCheck SGamma (CanonicalAtomic rr) (CanonicalAtomic RR))]



;; #source file ./ott/lang_simple.ott  lines 764 - 768 
 [is_SGamma_of_Env SGamma
  is_rr_of_atomic rr
  (StaticCSynth SGamma rr (CanonicalAtomic (AtomicSet i)))
   (and (< 0  i ) (<  i   j )) 
  ----------------------------------------------------------------------------
  (StaticCCheck SGamma (CanonicalAtomic rr) (CanonicalAtomic (AtomicSet j)))]



;; #source file ./ott/lang_simple.ott  lines 770 - 774 
 [is_SGamma_of_Env SGamma
  is_u_of_canonical u
  (SWellFormed (EnvExt x U SGamma))
  (StaticCCheck (EnvExt x U SGamma) u V)
  ----------------------------------------------------------------
  (StaticCCheck SGamma  (CanonicalLam x u)  (CanonicalPi x U V))]



;; #source file ./ott/lang_simple.ott  lines 775 - 780 
 [is_SGamma_of_Env SGamma
  (StaticCCheck SGamma U (CanonicalAtomic (AtomicSet i)))
  (SWellFormed (EnvExt x U SGamma))
  (StaticCCheck (EnvExt x U SGamma) V (CanonicalAtomic (AtomicSet i)))
  ---------------------------------------------------------------------------
  (StaticCCheck SGamma (CanonicalPi x U V) (CanonicalAtomic (AtomicSet i)))]
)

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 788 - 792 
 [is_SGamma_of_Env SGamma
  (StaticSetNorm SGamma V T)
  (StaticCheck SGamma t V)
  ----------------------------------------
  (StaticSynth SGamma  (TermAnn t T)  V)]



;; #source file ./ott/lang_simple.ott  lines 793 - 796 
 [is_SGamma_of_Env SGamma
   (>  i  0) 
  -----------------------------------------------------------------------------
  (StaticSynth SGamma (TermSet i) (CanonicalAtomic  (AtomicSet (+  i  1) ) ))]



;; #source file ./ott/lang_simple.ott  lines 798 - 802 
 [is_u_of_canonical U
  is_SGamma_of_Env SGamma
  (SWellFormed SGamma)
  (GVarLook x U SGamma)
  ------------------------------------
  (StaticSynth SGamma (TermVar x) U)]



;; #source file ./ott/lang_simple.ott  lines 807 - 813 
 [is_s_of_term s
  is_SGamma_of_Env SGamma
  (StaticSynth SGamma s (CanonicalPi x U V))
  (StaticNormCheck SGamma v t U)
  (StaticHsub y U v V V_)
  ---------------------------------------
  (StaticSynth SGamma (TermApp s t) V_)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 818 - 821 
 [is_SGamma_of_Env SGamma
  (StaticSynth SGamma t U)
  --------------------------
  (StaticCheck SGamma t U)]



;; #source file ./ott/lang_simple.ott  lines 822 - 826 
 [is_SGamma_of_Env SGamma
  (StaticSynth SGamma t (CanonicalAtomic (AtomicSet i)))
   (and (< 0  i ) (<  i   j )) 
  --------------------------------------------------------
  (StaticCheck SGamma t (CanonicalAtomic (AtomicSet j)))]



;; #source file ./ott/lang_simple.ott  lines 827 - 832 
 [is_SGamma_of_Env SGamma
  (StaticNormCheck SGamma U S (CanonicalAtomic (AtomicSet i)))
  (SWellFormed (EnvExt x U SGamma))
  (StaticCheck (EnvExt x U SGamma) T (CanonicalAtomic (AtomicSet i)))
  ---------------------------------------------------------------------
  (StaticCheck SGamma (TermPi x S T) (CanonicalAtomic (AtomicSet i)))]



;; #source file ./ott/lang_simple.ott  lines 834 - 838 
 [is_SGamma_of_Env SGamma
  (SWellFormed (EnvExt x U SGamma))
  (StaticCheck (EnvExt x U SGamma) t V)
  ----------------------------------------------------------
  (StaticCheck SGamma  (TermLam x t)  (CanonicalPi x U V))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 844 - 847 
 [is_SGamma_of_Env SGamma
  (StaticNormSynth SGamma S U (CanonicalAtomic (AtomicSet i)))
  ----------------------------
  (StaticSetNorm SGamma U S)]



;; #source file ./ott/lang_simple.ott  lines 848 - 852 
 [is_SGamma_of_Env SGamma
  (StaticSetNorm SGamma U S)
  (StaticSetNorm (EnvExt x U SGamma) V T)
  -----------------------------------------------------------
  (StaticSetNorm SGamma (CanonicalPi x U V) (TermPi x S T))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 856 - 860 
 [is_SGamma_of_Env SGamma
  (StaticSetNorm SGamma V T)
  (StaticNormCheck SGamma v t V)
  ----------------------------------------------
  (StaticNormSynth SGamma  (TermAnn t T)  v V)]



;; #source file ./ott/lang_simple.ott  lines 861 - 864 
 [is_SGamma_of_Env SGamma
   (>  i  0) 
  -----------------------------------------------------------------------------------------------------------------
  (StaticNormSynth SGamma (TermSet i) (CanonicalAtomic (AtomicSet i)) (CanonicalAtomic  (AtomicSet (+  i  1) ) ))]



;; #source file ./ott/lang_simple.ott  lines 866 - 871 
 [is_SGamma_of_Env SGamma
  (SWellFormed SGamma)
  (GVarLook x U SGamma)
  (EtaExpand  (AtomicSpine  x  SpineEmpty)  v U)
  ------------------------------------------
  (StaticNormSynth SGamma (TermVar x) v U)]



;; #source file ./ott/lang_simple.ott  lines 876 - 883 
 [is_s_of_term s
  is_SGamma_of_Env SGamma
  is_u_of_canonical u
  (StaticNormSynth SGamma s  (CanonicalLam x u)  (CanonicalPi x U1 U2))
  (StaticNormCheck SGamma v t U)
  (StaticHsub y U1 v u v_)
  (StaticHsub y U1 v U2 V)
  ---------------------------------------------
  (StaticNormSynth SGamma (TermApp s t) v_ V)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 890 - 893 
 [is_SGamma_of_Env SGamma
  (StaticNormSynth SGamma t v U)
  --------------------------------
  (StaticNormCheck SGamma v t U)]



;; #source file ./ott/lang_simple.ott  lines 894 - 898 
 [is_SGamma_of_Env SGamma
  (StaticNormSynth SGamma t v (CanonicalAtomic (AtomicSet i)))
   (and (< 0  i ) (<  i   j )) 
  --------------------------------------------------------------
  (StaticNormCheck SGamma v t (CanonicalAtomic (AtomicSet j)))]



;; #source file ./ott/lang_simple.ott  lines 900 - 905 
 [is_SGamma_of_Env SGamma
  (StaticNormCheck SGamma U S (CanonicalAtomic (AtomicSet i)))
  (SWellFormed (EnvExt x U SGamma))
  (StaticNormCheck (EnvExt x U SGamma) V T (CanonicalAtomic (AtomicSet j)))
  ---------------------------------------------------------------------------------------------
  (StaticNormCheck SGamma (CanonicalPi x U V) (TermPi x S T) (CanonicalAtomic (AtomicSet i)))]



;; #source file ./ott/lang_simple.ott  lines 906 - 910 
 [is_SGamma_of_Env SGamma
  (SWellFormed (EnvExt x U SGamma))
  (StaticNormCheck (EnvExt x U SGamma) v t V)
  -----------------------------------------------------------------------------------
  (StaticNormCheck SGamma  (CanonicalLam x v)   (TermLam x t)  (CanonicalPi x U V))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 915 - 917 
 [is_rr_of_atomic rr
  ----------------------------------------------------------
  (EtaExpand rr (CanonicalAtomic rr) (CanonicalAtomic RR))]



;; #source file ./ott/lang_simple.ott  lines 919 - 923 
 [is_e_of_spine e
  is_u_of_canonical u
  (EtaExpand  (AtomicSpine  y  SpineEmpty)  u U)
  (EtaExpand (AtomicSpine x (SpineCons e u)) v V)
  ------------------------------------------------------------------------
  (EtaExpand (AtomicSpine x e)  (CanonicalLam y v)  (CanonicalPi y U V))]
)

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 940 - 942 
 [-----------------------------------
  (Domain (CanonicalPi x gU gV) gU)]



;; #source file ./ott/lang_simple.ott  lines 943 - 945 
 [------------------------------------
  (Domain CanonicalDyn CanonicalDyn)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 950 - 952 
 [-------------------------------------------
  (GradualEnvSub x gU gu EnvEmpty EnvEmpty)]



;; #source file ./ott/lang_simple.ott  lines 953 - 958 
 [is_Gamma_of_Env Gamma
  is_Gamma_of_Env Gamma_
  (GradualHsub x gU gu gU gU_)
  (GradualEnvSub x gU gu Gamma Gamma_)
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  -------------------------------------------------------------------
  (GradualEnvSub x gU gu (EnvExt y gU Gamma) (EnvExt y gU_ Gamma_))]



;; #source file ./ott/lang_simple.ott  lines 959 - 962 
 [is_Gamma_of_Env Gamma
  is_Gamma_of_Env Gamma_
  (GradualEnvSub x gU gu Gamma Gamma_)
  ----------------------------------------------------
  (GradualEnvSub x gU gu (EnvExt x gU Gamma) Gamma_)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 968 - 970 
 [---------------------------------------------------------------------------------------
  (GradualHsub x gU gu (CanonicalAtomic (AtomicSet i)) (CanonicalAtomic (AtomicSet i)))]



;; #source file ./ott/lang_simple.ott  lines 972 - 974 
 [-------------------------------------------------
  (GradualHsub x gU gu CanonicalDyn CanonicalDyn)]



;; #source file ./ott/lang_simple.ott  lines 975 - 980 
 [(GradualHsub x gU gu gU gU_)
  (GradualHsub x gU gu gV gV_)
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  ---------------------------------------------------------------------
  (GradualHsub x gU gu (CanonicalPi y gU gV) (CanonicalPi y gU_ gV_))]



;; #source file ./ott/lang_simple.ott  lines 982 - 986 
 [(GradualHsub x gU gu gv gv_)
   (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  --------------------------------------------------------------------
  (GradualHsub x gU gu  (CanonicalLam y gv)   (CanonicalLam y gv_) )]



;; #source file ./ott/lang_simple.ott  lines 989 - 992 
 [ (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  -------------------------------------------------------------------------------------------------------------------------
  (GradualHsub x gU gu (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ))]



;; #source file ./ott/lang_simple.ott  lines 993 - 998 
 [ (not (equal?  (CanonicalAtomic  (AtomicSpine  x  SpineEmpty) )   (CanonicalAtomic  (AtomicSpine  y  SpineEmpty) ) )) 
  (GradualHsub x gU gu (CanonicalAtomic (AtomicSpine y ge)) (CanonicalAtomic (AtomicSpine y ge_)))
  (GradualHsub x gU gu gv gv_)
  ---------------------------------------------------------------------------------------------------------------------------------
  (GradualHsub x gU gu (CanonicalAtomic (AtomicSpine y (SpineCons ge gv))) (CanonicalAtomic (AtomicSpine y (SpineCons ge_ gv_))))]



;; #source file ./ott/lang_simple.ott  lines 1001 - 1004 
 [(GradualHsubR x gU gu (AtomicSpine x ge) gu gV)
  ---------------------------------------------------------------
  (GradualHsub x gU gu (CanonicalAtomic (AtomicSpine x ge)) gu)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1023 - 1025 
 [-------------------------------------------------------------
  (GradualHsubR x gU gu  (AtomicSpine  x  SpineEmpty)  gu gU)]



;; #source file ./ott/lang_simple.ott  lines 1026 - 1031 
 [(GradualHsubR x gU gu1  [grr]  gv1 CanonicalDyn)
  -----------------------------------------------------------
  (GradualHsubR x gU gu1  [grr]  CanonicalDyn CanonicalDyn)]



;; #source file ./ott/lang_simple.ott  lines 1033 - 1040 
 [(GradualHsubR x gU gu  [grr]   (CanonicalLam y gu2)  (CanonicalPi y gU1 gU2))
  (GradualHsub x gU gu gv1 gv2)
  (GradualHsub y gU1 gv2 gu2 gv3)
  (GradualHsub y gU1 gv2 gU2 gV)
  ---------------------------------------
  (GradualHsubR x gU gu  [grr]  gv3 gV)]



;; #source file ./ott/lang_simple.ott  lines 1042 - 1048 
 [(GradualHsubR x gU gu  [grr]  CanonicalDyn (CanonicalPi y gU1 gU2))
  (GradualHsub x gU gu gv gv2)
  (GradualHsub y gU1 gv gU2 gV)
  ------------------------------------------------
  (GradualHsubR x gU gu  [grr]  CanonicalDyn gV)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1054 - 1057 
 [(GradualHsub x gU gu gV gV_)
  ------------------------------------------
  (CodSub gU gu (CanonicalPi x gU gV) gV_)]



;; #source file ./ott/lang_simple.ott  lines 1058 - 1060 
 [------------------------------------------
  (CodSub gU gu CanonicalDyn CanonicalDyn)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1065 - 1068 
 [(GradualHsub x gU gu gv gv_)
  -------------------------------------------
  (BodySub gU gu  (CanonicalLam x gv)  gv_)]



;; #source file ./ott/lang_simple.ott  lines 1069 - 1071 
 [-------------------------------------------
  (BodySub gU gu CanonicalDyn CanonicalDyn)]
)

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 1079 - 1081 
 [-----------------------
  (WellFormed EnvEmpty)]



;; #source file ./ott/lang_simple.ott  lines 1082 - 1087 
 [is_Gamma_of_Env Gamma
  (WellFormed Gamma)
  (GradualCCheck Gamma gU (CanonicalAtomic (AtomicSet i)))
  (GVarFree x Gamma)
  ----------------------------------
  (WellFormed (EnvExt x gU Gamma))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1091 - 1094 
 [is_Gamma_of_Env Gamma
   (>  i  0) 
  --------------------------------------------------------------------------------
  (GradualCSynth Gamma (AtomicSet i) (CanonicalAtomic  (AtomicSet (+  i  1) ) ))]



;; #source file ./ott/lang_simple.ott  lines 1096 - 1100 
 [is_Gamma_of_Env Gamma
  (WellFormed Gamma)
  (GVarLook x gU Gamma)
  ---------------------------------------------------------
  (GradualCSynth Gamma  (AtomicSpine  x  SpineEmpty)  gU)]



;; #source file ./ott/lang_simple.ott  lines 1104 - 1112 
 [is_Gamma_of_Env Gamma
  (GradualCSynth Gamma (AtomicSpine x ge) gU)
  (Domain gU gV)
  (GradualCCheck Gamma gu gV)
  (CodSub gV gu gU gV_)
  -------------------------------------------------------------
  (GradualCSynth Gamma (AtomicSpine x (SpineCons ge gu)) gV_)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1117 - 1122 
 [is_Gamma_of_Env Gamma
  (GradualCSynth Gamma grr gU)
  (Consistent gU gV)
  ------------------------------------------------
  (GradualCCheck Gamma (CanonicalAtomic grr) gV)]



;; #source file ./ott/lang_simple.ott  lines 1123 - 1127 
 [is_Gamma_of_Env Gamma
  (GradualCSynth Gamma grr (CanonicalAtomic (AtomicSet i)))
   (and (< 0  i ) (<  i   j )) 
  -----------------------------------------------------------------------------
  (GradualCCheck Gamma (CanonicalAtomic grr) (CanonicalAtomic (AtomicSet j)))]



;; #source file ./ott/lang_simple.ott  lines 1129 - 1133 
 [is_Gamma_of_Env Gamma
  (WellFormed (EnvExt x gU Gamma))
  (GradualCCheck (EnvExt x gU Gamma) gu gV)
  -------------------------------------------------------------------
  (GradualCCheck Gamma  (CanonicalLam x gu)  (CanonicalPi x gU gV))]



;; #source file ./ott/lang_simple.ott  lines 1134 - 1138 
 [is_Gamma_of_Env Gamma
  (WellFormed (EnvExt x CanonicalDyn Gamma))
  (GradualCCheck (EnvExt x CanonicalDyn Gamma) gu CanonicalDyn)
  ----------------------------------------------------------
  (GradualCCheck Gamma  (CanonicalLam x gu)  CanonicalDyn)]



;; #source file ./ott/lang_simple.ott  lines 1139 - 1145 
 [is_Gamma_of_Env Gamma
  (GradualCCheck Gamma gU1 gV)
  (WellFormed (EnvExt x gU1 Gamma))
  (GradualCCheck (EnvExt x gU1 Gamma) gU2 gV)
  (Consistent gV (CanonicalAtomic (AtomicSet i)))
  --------------------------------------------------
  (GradualCCheck Gamma (CanonicalPi x gU1 gU2) gV)]



;; #source file ./ott/lang_simple.ott  lines 1147 - 1150 
 [is_Gamma_of_Env Gamma
  (GradualCCheck Gamma gU (CanonicalAtomic (AtomicSet i)))
  ---------------------------------------
  (GradualCCheck Gamma CanonicalDyn gU)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1158 - 1160 
 [------------------------------
  (Consistent CanonicalDyn gv)]



;; #source file ./ott/lang_simple.ott  lines 1161 - 1163 
 [------------------------------
  (Consistent gu CanonicalDyn)]



;; #source file ./ott/lang_simple.ott  lines 1164 - 1166 
 [--------------------
  (Consistent gu gu)]



;; #source file ./ott/lang_simple.ott  lines 1167 - 1171 
 [(Consistent gU gU_)
  (Consistent gV gV_)
  ------------------------------------------------------------
  (Consistent (CanonicalPi x gU gV) (CanonicalPi x gU_ gV_))]



;; #source file ./ott/lang_simple.ott  lines 1172 - 1175 
 [(Consistent gu gv)
  ----------------------------------------------------------
  (Consistent  (CanonicalLam x gu)   (CanonicalLam x gv) )]



;; #source file ./ott/lang_simple.ott  lines 1177 - 1181 
 [(Consistent (CanonicalAtomic (AtomicSpine x ge)) (CanonicalAtomic (AtomicSpine x ge_)))
  (Consistent gu gv)
  -----------------------------------------------------------------------------------------------------------------------
  (Consistent (CanonicalAtomic (AtomicSpine x (SpineCons ge gu))) (CanonicalAtomic (AtomicSpine x (SpineCons ge_ gv))))]
)

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 1189 - 1191 
 [---------------------------
  (Meet CanonicalDyn gU gU)]



;; #source file ./ott/lang_simple.ott  lines 1192 - 1194 
 [---------------------------
  (Meet gV CanonicalDyn gV)]



;; #source file ./ott/lang_simple.ott  lines 1195 - 1197 
 [-----------------
  (Meet gu gu gu)]



;; #source file ./ott/lang_simple.ott  lines 1198 - 1202 
 [(Meet gU gU_ gU__)
  (Meet gV gV_ gV__)
  --------------------------------------------------------------------------------
  (Meet (CanonicalPi x gU gV) (CanonicalPi x gU_ gV_) (CanonicalPi x gU__ gV__))]



;; #source file ./ott/lang_simple.ott  lines 1203 - 1206 
 [is_u_of_canonical u
  is_u_of_canonical u_
  is_u_of_canonical v
  (Meet u u_ v)
  ------------------------------------------------------------------
  (Meet (CanonicalLam x u) (CanonicalLam x u_) (CanonicalLam x v))]



;; #source file ./ott/lang_simple.ott  lines 1207 - 1211 
 [(Meet gu gu_ gu__)
  (Meet (CanonicalAtomic (AtomicSpine x ge)) (CanonicalAtomic (AtomicSpine x ge_)) (CanonicalAtomic (AtomicSpine x ge__)))
  --------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  (Meet (CanonicalAtomic (AtomicSpine x (SpineCons ge gu))) (CanonicalAtomic (AtomicSpine x (SpineCons ge_ gu_))) (CanonicalAtomic (AtomicSpine x (SpineCons ge__ gu__))))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1218 - 1221 
 [(Meet gU gV gU)
  -------------------
  (Precision gU gV)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1227 - 1232 
 [(Meet gV1 gV2 gV3)
  (Precision gU1 gV3)
  (Precision gU2 gV3)
  -----------------------------------------------
  (EvConsistent (EvidencePair gU1 gU2) gV1 gV2)]
)

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 1244 - 1248 
 [is_gs_of_term gT
  is_Gamma_of_Env Gamma
  (GradualSetNorm Gamma gV gT)
  (GradualCheck Gamma gt gV)
  -------------------------------------------
  (GradualSynth Gamma  (TermAnn gt gT)  gV)]



;; #source file ./ott/lang_simple.ott  lines 1249 - 1252 
 [is_Gamma_of_Env Gamma
   (>  i  0) 
  -----------------------------------------------------------------------------
  (GradualSynth Gamma (TermSet i) (CanonicalAtomic  (AtomicSet (+  i  1) ) ))]



;; #source file ./ott/lang_simple.ott  lines 1254 - 1258 
 [is_Gamma_of_Env Gamma
  (WellFormed Gamma)
  (GVarLook x gU Gamma)
  -------------------------------------
  (GradualSynth Gamma (TermVar x) gU)]



;; #source file ./ott/lang_simple.ott  lines 1263 - 1269 
 [is_gs_of_term gs
  is_Gamma_of_Env Gamma
  is_gs_of_term gt
  (GradualSynth Gamma gs gV)
  (Domain gV gV1)
  (GradualNormCheck Gamma gv gt gV1)
  (CodSub gV1 gv gV gV2)
  ------------------------------------------
  (GradualSynth Gamma (TermApp gs gt) gV2)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1276 - 1280 
 [is_Gamma_of_Env Gamma
  (GradualSynth Gamma gt gU)
  (Consistent gU gV)
  ----------------------------
  (GradualCheck Gamma gt gV)]



;; #source file ./ott/lang_simple.ott  lines 1281 - 1285 
 [is_Gamma_of_Env Gamma
  (GradualSynth Gamma gt (CanonicalAtomic (AtomicSet i)))
   (and (< 0  i ) (<  i   j )) 
  ---------------------------------------------------------
  (GradualCheck Gamma gt (CanonicalAtomic (AtomicSet j)))]



;; #source file ./ott/lang_simple.ott  lines 1286 - 1292 
 [is_gs_of_term gS
  is_Gamma_of_Env Gamma
  (GradualNormCheck Gamma gU gS gV)
  (WellFormed (EnvExt x gU Gamma))
  (GradualCheck (EnvExt x gU Gamma) gT gV)
  (Consistent gV (CanonicalAtomic (AtomicSet i)))
  ------------------------------------------
  (GradualCheck Gamma (TermPi x gS gT) gV)]



;; #source file ./ott/lang_simple.ott  lines 1294 - 1298 
 [is_Gamma_of_Env Gamma
  (WellFormed (EnvExt x gU Gamma))
  (GradualCheck (EnvExt x gU Gamma) gt gV)
  -------------------------------------------------------------
  (GradualCheck Gamma  (TermLam x gt)  (CanonicalPi x gU gV))]



;; #source file ./ott/lang_simple.ott  lines 1300 - 1304 
 [is_Gamma_of_Env Gamma
  (WellFormed (EnvExt x CanonicalDyn Gamma))
  (GradualCheck (EnvExt x CanonicalDyn Gamma) gt CanonicalDyn)
  ----------------------------------------------------
  (GradualCheck Gamma  (TermLam x gt)  CanonicalDyn)]



;; #source file ./ott/lang_simple.ott  lines 1305 - 1308 
 [is_Gamma_of_Env Gamma
  (GradualCCheck Gamma gU (CanonicalAtomic (AtomicSet i)))
  ---------------------------------
  (GradualCheck Gamma TermDyn gU)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1314 - 1317 
 [is_Gamma_of_Env Gamma
  (GradualNormSynth Gamma TT gU (CanonicalAtomic (AtomicSet i)))
  ------------------------------
  (GradualSetNorm Gamma gU TT)]



;; #source file ./ott/lang_simple.ott  lines 1319 - 1323 
 [is_Gamma_of_Env Gamma
  (GradualSetNorm Gamma gU SS)
  (GradualSetNorm (EnvExt x gU Gamma) gV TT)
  ---------------------------------------------------------------
  (GradualSetNorm Gamma (CanonicalPi x gU gV) (TermPi x SS TT))]



;; #source file ./ott/lang_simple.ott  lines 1324 - 1326 
 [is_Gamma_of_Env Gamma
  ---------------------------------------------
  (GradualSetNorm Gamma CanonicalDyn TermDyn)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1333 - 1335 
 [--------------------------------------------------------------
  (GEtaExpand grr (CanonicalAtomic grr) (CanonicalAtomic gRR))]



;; #source file ./ott/lang_simple.ott  lines 1337 - 1341 
 [(GEtaExpand  (AtomicSpine  y  SpineEmpty)  gu gU)
  (GEtaExpand (AtomicSpine x (SpineCons ge gu)) gv gV)
  -----------------------------------------------------------------------------
  (GEtaExpand (AtomicSpine x ge)  (CanonicalLam y gv)  (CanonicalPi y gU gV))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1345 - 1349 
 [is_Gamma_of_Env Gamma
  (GradualSetNorm Gamma gV TT)
  (GradualNormCheck Gamma gv tt gV)
  --------------------------------------------------
  (GradualNormSynth Gamma  (TermAnn tt TT)  gv gV)]



;; #source file ./ott/lang_simple.ott  lines 1350 - 1353 
 [is_Gamma_of_Env Gamma
   (>  i  0) 
  -----------------------------------------------------------------------------------------------------------------
  (GradualNormSynth Gamma (TermSet i) (CanonicalAtomic (AtomicSet i)) (CanonicalAtomic  (AtomicSet (+  i  1) ) ))]



;; #source file ./ott/lang_simple.ott  lines 1355 - 1360 
 [is_Gamma_of_Env Gamma
  (WellFormed Gamma)
  (GVarLook x gU Gamma)
  (GEtaExpand  (AtomicSpine  x  SpineEmpty)  gv gU)
  --------------------------------------------
  (GradualNormSynth Gamma (TermVar x) gv gU)]



;; #source file ./ott/lang_simple.ott  lines 1364 - 1372 
 [is_Gamma_of_Env Gamma
  (GradualNormSynth Gamma ss gu gV)
  (Domain gV gV1)
  (GradualNormCheck Gamma gv tt gV1)
  (BodySub gV1 gv gu gv_)
  (CodSub gV1 gv gV gV2)
  --------------------------------------------------
  (GradualNormSynth Gamma (TermApp ss tt) gv_ gV2)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1379 - 1383 
 [is_Gamma_of_Env Gamma
  (GradualNormSynth Gamma tt gv gV)
  (Precision gV gU)
  -----------------------------------
  (GradualNormCheck Gamma gv tt gU)]



;; #source file ./ott/lang_simple.ott  lines 1384 - 1390 
 [is_Gamma_of_Env Gamma
  (GradualNormSynth Gamma tt gv gV)
  (Consistent gU gV)
  (Meet gU gV gU_)
   (not (equal?  gU_   gV )) 
  ---------------------------------------------
  (GradualNormCheck Gamma CanonicalDyn tt gU)]



;; #source file ./ott/lang_simple.ott  lines 1391 - 1395 
 [is_Gamma_of_Env Gamma
  (GradualNormSynth Gamma tt gv (CanonicalAtomic (AtomicSet i)))
   (and (< 0  i ) (<  i   j )) 
  ----------------------------------------------------------------
  (GradualNormCheck Gamma gv tt (CanonicalAtomic (AtomicSet j)))]



;; #source file ./ott/lang_simple.ott  lines 1397 - 1405 
 [is_Gamma_of_Env Gamma
  (GradualNormCheck Gamma gU1 SS gV)
  (WellFormed (EnvExt x gU1 Gamma))
  (GradualNormCheck (EnvExt x gU1 Gamma) gU2 TT gV)
  (Consistent gV (CanonicalAtomic (AtomicSet i)))
  ----------------------------------------------------------------------
  (GradualNormCheck Gamma (CanonicalPi x gU1 gU2) (TermPi x SS TT) gV)]



;; #source file ./ott/lang_simple.ott  lines 1406 - 1410 
 [is_Gamma_of_Env Gamma
  (WellFormed (EnvExt x gU Gamma))
  (GradualNormCheck (EnvExt x gU Gamma) gv tt gV)
  ---------------------------------------------------------------------------------------
  (GradualNormCheck Gamma  (CanonicalLam x gv)   (TermLam x tt)  (CanonicalPi x gU gV))]



;; #source file ./ott/lang_simple.ott  lines 1411 - 1415 
 [is_Gamma_of_Env Gamma
  (WellFormed (EnvExt x CanonicalDyn Gamma))
  (GradualNormCheck (EnvExt x CanonicalDyn Gamma) gv tt CanonicalDyn)
  ------------------------------------------------------------------------------
  (GradualNormCheck Gamma  (CanonicalLam x gv)   (TermLam x tt)  CanonicalDyn)]



;; #source file ./ott/lang_simple.ott  lines 1416 - 1419 
 [is_Gamma_of_Env Gamma
  (GradualCCheck Gamma gU (CanonicalAtomic (AtomicSet i)))
  --------------------------------------------------
  (GradualNormCheck Gamma CanonicalDyn TermDyn gU)]



;; #source file ./ott/lang_simple.ott  lines 1421 - 1426 
 [is_Gamma_of_Env Gamma
  (GradualNormSynth Gamma ett gv gV)
  (Meet gU gV gV)
  (EvConsistent (EvidencePair gV gV) gU gV)
  ------------------------------------------------
  (GradualNormCheck Gamma gv (TermEp ep ett) gU)]



;; #source file ./ott/lang_simple.ott  lines 1427 - 1433 
 [is_Gamma_of_Env Gamma
  (GradualNormSynth Gamma ett gv gV)
  (Meet gU gV gU_)
  (EvConsistent (EvidencePair gU_ gU_) gU gV)
   (not (equal?  gU_   gV_ )) 
  ----------------------------------------------------------
  (GradualNormCheck Gamma CanonicalDyn (TermEp ep ett) gU)]



;; #source file ./ott/lang_simple.ott  lines 1435 - 1437 
 [is_Gamma_of_Env Gamma
  ----------------------------------------------------------
  (GradualNormCheck Gamma CanonicalDyn (TermDynAnn gU) gU)]
)

;;; definitions 

(define-judgment-form
  L
;; #source file ./ott/lang_simple.ott  lines 1446 - 1449 
 [is_Gamma_of_Env Gamma
   (>  i  0) 
  -----------------------------------------------------------------------
  (EvType Gamma (TermSet i) (CanonicalAtomic  (AtomicSet (+  i  1) ) ))]



;; #source file ./ott/lang_simple.ott  lines 1451 - 1455 
 [is_Gamma_of_Env Gamma
  (WellFormed Gamma)
  (GVarLook x gU Gamma)
  -------------------------------
  (EvType Gamma (TermVar x) gU)]



;; #source file ./ott/lang_simple.ott  lines 1457 - 1462 
 [is_es_of_term eS
  is_Gamma_of_Env Gamma
  (GradualNormCheck Gamma gU eS gV)
  (WellFormed (EnvExt x gU Gamma))
  (EvType (EnvExt x gU Gamma) eT gV)
  ------------------------------------
  (EvType Gamma (TermPi x eS eT) gV)]



;; #source file ./ott/lang_simple.ott  lines 1464 - 1470 
 [is_es_of_term es
  is_Gamma_of_Env Gamma
  is_es_of_term et
  (EvType Gamma es gV)
  (Domain gV gU)
  (GradualNormCheck Gamma gv et gU)
  (CodSub gU gv gV gV2)
  ------------------------------------
  (EvType Gamma (TermApp es et) gV2)]



;; #source file ./ott/lang_simple.ott  lines 1472 - 1476 
 [is_Gamma_of_Env Gamma
  (EvType Gamma et gU)
  (EvConsistent ep gU gV)
  ----------------------------------
  (EvType Gamma (TermEp ep et) gV)]



;; #source file ./ott/lang_simple.ott  lines 1478 - 1482 
 [is_Gamma_of_Env Gamma
  (WellFormed (EnvExt x gU Gamma))
  (EvType (EnvExt x gU Gamma) et gV)
  -------------------------------------------------------
  (EvType Gamma  (TermLam x et)  (CanonicalPi x gU gV))]



;; #source file ./ott/lang_simple.ott  lines 1484 - 1488 
 [is_Gamma_of_Env Gamma
  (WellFormed (EnvExt x CanonicalDyn Gamma))
  (EvType (EnvExt x CanonicalDyn Gamma) et CanonicalDyn)
  ----------------------------------------------
  (EvType Gamma  (TermLam x et)  CanonicalDyn)]



;; #source file ./ott/lang_simple.ott  lines 1489 - 1492 
 [is_Gamma_of_Env Gamma
  (GradualCCheck Gamma gU (CanonicalAtomic (AtomicSet i)))
  -----------------------------------
  (EvType Gamma (TermDynAnn gU) gU)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1507 - 1509 
 [is_simpleValue_of_term sv
  ---------------------------------------
  (SimpleSmallStep  (TermAnn sv T)  sv)]



;; #source file ./ott/lang_simple.ott  lines 1510 - 1512 
 [is_simpleValue_of_term sv
  ------------------------------------------------------------------------
  (SimpleSmallStep (TermApp  (TermLam x t)  sv)  (error "TODO tsubst") )]



;; #source file ./ott/lang_simple.ott  lines 1514 - 1517 
 [is_s_of_term s
  (SimpleSmallStep s t)
  -----------------------------------------------------------
  (SimpleSmallStep  (error "TODO SC")   (error "TODO SC") )]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1524 - 1527 
 [(ConsistentTrans ep1 ep2 ep3)
  ------------------------------------------------------------
  (SmallStep (TermEp ep1  (TermEp ep2 et) ) (TermEp ep3 et))]



;; #source file ./ott/lang_simple.ott  lines 1530 - 1533 
 [ (error "Ep1 Ep2 undefined") 
  ------------------------------------------------------
  (SmallStep (TermEp ep1  (TermEp ep2 et) ) TermError)]



;; #source file ./ott/lang_simple.ott  lines 1534 - 1536 
 [is_eu_of_term ev
  -------------------------------------------------------------------
  (SmallStep (TermApp  (TermLam x et)  ev)  (error "TODO tsubst") )]



;; #source file ./ott/lang_simple.ott  lines 1537 - 1542 
 [is_eu_of_term ev
  (Domain gU gV1)
  (GradualNormCheck EnvEmpty gv ev gV1)
  (CodSub gV1 gv gU gV2)
  -----------------------------------------------------------
  (SmallStep (TermApp (TermDynAnn gU) ev) (TermDynAnn gV2))]



;; #source file ./ott/lang_simple.ott  lines 1543 - 1548 
 [is_ru_of_term rv
  (EvDom ep1 ep3)
  (ConsistentTrans ep2 ep3 ep4)
  (EvCod rv ep1 ep5)
  ----------------------------------------------------------------------------------------------------------------
  (SmallStep (TermApp  (TermEp ep1  (TermLam x et) )   (TermEp ep2 rv) ) (TermEp ep5   (error "TODO tsubst")  ))]



;; #source file ./ott/lang_simple.ott  lines 1549 - 1555 
 [is_ru_of_term rv
  is_eu_of_term ev
  (Domain gV gV_) ...
  (ConsistentTrans ep1 (EvidencePair gV_1 gV_2) ep2)
  (GradualNormCheck EnvEmpty gv (TermEp ep1 ev) gV_) ...
  (CodSub gV_ gv gV gV__) ...
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  (SmallStep (TermApp  (TermEp (EvidencePair (error "TODO Pp symterm ") (error "TODO Pp symterm ")) (TermDynAnn (error "TODO Pp symterm ")))   (TermEp ep1 rv) ) (TermEp (EvidencePair gV__1 gV__2) (TermDynAnn (error "TODO Pp symterm "))))]



;; #source file ./ott/lang_simple.ott  lines 1556 - 1559 
 [is_ru_of_term rv
  is_es_of_term es
  (SmallStep (TermApp  (TermEp ep1 rv)   (TermEp (EvidencePair CanonicalDyn CanonicalDyn) rv) ) es)
  -----------------------------------------------
  (SmallStep (TermApp  (TermEp ep1 rv)  rv) es)]



;; #source file ./ott/lang_simple.ott  lines 1560 - 1564 
 [is_ru_of_term ru
  is_ru_of_term rv
  (EvDom ep1 ep3)
   (error "Ep1 Ep2 undefined") 
  ---------------------------------------------------------------------
  (SmallStep (TermApp  (TermEp ep1 ru)   (TermEp ep2 rv) ) TermError)]



;; #source file ./ott/lang_simple.ott  lines 1565 - 1568 
 [is_ru_of_term rv
  is_eu_of_term ev
   (error "Dom ep undefined") 
  ------------------------------------------------------
  (SmallStep (TermApp  (TermEp ep1 rv)  ev) TermError)]



;; #source file ./ott/lang_simple.ott  lines 1574 - 1577 
 [is_eu_of_term ev
   (error "Dom gU Undefined") 
  -------------------------------------------------------------------
  (SmallStep (TermApp  (TermEp ep1 (TermDynAnn gU))  ev) TermError)]



;; #source file ./ott/lang_simple.ott  lines 1580 - 1584 
 [is_es_of_term es
  (SmallStep es et)
   (error "TODO neqError") 
  -----------------------------------------------------
  (SmallStep  (error "TODO EC")   (error "TODO EC") )]



;; #source file ./ott/lang_simple.ott  lines 1585 - 1588 
 [is_es_of_term es
  (SmallStep es TermError)
  -------------------------------------------
  (SmallStep  (error "TODO EC")  TermError)]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1593 - 1597 
 [(Meet gU1 gU2 gU3)
  (Meet gV1 gV2 gV3)
  ----------------------------------------------------------------------------------------
  (ConsistentTrans (EvidencePair gU1 gV1) (EvidencePair gU2 gV2) (EvidencePair gU3 gV3))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1602 - 1606 
 [(Domain gU gU_)
  (Domain gV gV_)
  -----------------------------------------------------
  (EvDom (EvidencePair gU gV) (EvidencePair gU_ gV_))]

withDFNS655 
;; #source file ./ott/lang_simple.ott  lines 1612 - 1620 
 [is_eu_of_term ev
  (Domain gU gU1)
  (Domain gV gV1)
  (GradualNormCheck EnvEmpty gu ev gU1)
  (GradualNormCheck EnvEmpty gv ev gV1)
  (CodSub gU1 gu gU gU2)
  (CodSub gV1 gv gV gV2)
  --------------------------------------------------------
  (EvCod ev (EvidencePair gU gV) (EvidencePair gU2 gV2))]
)


